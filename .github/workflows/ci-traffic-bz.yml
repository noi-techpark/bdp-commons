name: CI/CD traffic-bz

on:
  push:
    paths:
      - "data-collectors/traffic-bz/**"
      - ".github/workflows/ci-traffic-bz.yml"

env:
  WORKING_DIRECTORY: data-collectors/traffic-bz
  PROJECT_NAME: odh-mobility-dc-traffic-bz
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/odh-mobility-dc-traffic-bz
  DOCKER_TAG: ${{ github.sha }}
  JAVA_VERSION: '8'

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout source code
        uses: noi-techpark/github-actions/checkout@v2
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v1
      - name: Test code
        uses: noi-techpark/github-actions/maven-test@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          working-directory: ${{ env.WORKING_DIRECTORY }}
          test-command: 'mvn -B -U clean compile test'

# Deploy Test
  deploy-test-traffic-bz:
    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test-traffic-bz
    env:
      KEYCLOAK_URL: https://auth.opendatahub.testingmachine.eu
    steps:
      - name: Checkout source code
        uses: noi-techpark/github-actions/checkout@v2
      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # Data Collector config for Traffic bz
          X_endpoint_defaultUri: ${{ secrets.TRAFFIC_BZ_DATA_ENDPOINT }}

          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx512m

          # Open Data Hub Writer Connectivity
          X_authorizationUri: ${{ env.KEYCLOAK_URL }}/auth
          X_tokenUri: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
          X_clientId: odh-mobility-datacollector
          X_clientName: odh-mobility-datacollector
          X_clientSecret: ${{ secrets.DATACOLLECTORS_CLIENT_SECRET_TEST }}
          X_scope: openid
          X_BASE_URI: https://mobility.share.opendatahub.testingmachine.eu/json

          # Logging
          X_LOG_LEVEL: debug
          X_LOG_STYLE: json
          X_provenance_name: ${{ env.PROJECT_NAME }}
          X_provenance_version: ${{ github.sha }}

          # Scheduler: every hour x 2 and every 5 minutes
          X_SCHEDULER_CRON_STATIONS: 0 0 * * * *
          X_SCHEDULER_CRON_TYPES: 0 0 * * * *
          X_SCHEDULER_CRON_HISTORY: 0 */5 * * * *
          X_SCHEDULER_POOL_SIZE: 10

          # historical import start date
          X_HISTORY_START_DATE: "01/01/2023"
          # request time windos in seconds (86400 is 1 day)
          X_TIME_INTERVAL: 86400

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}


      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: 'test'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}


  # Deploy Production
  deploy-prod-traffic-bz:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/prod'
    needs: test
    concurrency: deploy-prod-traffic-bz
    env:
      KEYCLOAK_URL: https://auth.opendatahub.com
    steps:
      - name: Checkout source code
        uses: noi-techpark/github-actions/checkout@v2
      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # Data Collector config for Traffic bz
          X_endpoint_defaultUri: ${{ secrets.TRAFFIC_BZ_DATA_ENDPOINT }}

          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx512m

          # Open Data Hub Writer Connectivity
          X_authorizationUri: ${{ env.KEYCLOAK_URL }}/auth
          X_tokenUri: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
          X_clientId: odh-mobility-datacollector
          X_clientName: odh-mobility-datacollector
          X_clientSecret: ${{ secrets.DATACOLLECTORS_CLIENT_SECRET_PROD }}
          X_scope: openid
          X_BASE_URI: https://mobility.share.opendatahub.com/json

          # Logging
          X_LOG_LEVEL: "info"
          X_LOG_STYLE: json
          X_provenance_name: ${{ env.PROJECT_NAME }}
          X_provenance_version: ${{ github.sha }}

          # Scheduler: every hour x 2 and every 5 minutes
          X_SCHEDULER_CRON_STATIONS: 0 0 * * * *
          X_SCHEDULER_CRON_TYPES: 0 0 * * * *
          X_SCHEDULER_CRON_HISTORY: 0 */5 * * * *
          X_SCHEDULER_POOL_SIZE: 10

          # historical import start date
          X_HISTORY_START_DATE: "01/01/2023"
          # request time windos in seconds (86400 is 1 day)
          X_TIME_INTERVAL: 86400

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}


      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: 'prod'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}


