name: CI/CD carpooling

on:
  push:
    paths:
      - "data-collectors/carpooling/**"
      - ".github/workflows/ci-carpooling.yml"

env:
  WORKING_DIRECTORY: data-collectors/carpooling
  PROJECT_NAME: odh-mobility-dc-carpooling
  DOCKER_IMAGE: ghcr.io/${{ github.repository }}/odh-mobility-dc-carpooling
  DOCKER_TAG: ${{ github.sha }}
  JAVA_VERSION: '8'
  GOOGLE_API_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_API_SERVICE_ACCOUNT }}

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout source code
        uses: noi-techpark/github-actions/checkout@v2
      - name: Test code
        uses: noi-techpark/github-actions/maven-test@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          working-directory: ${{ env.WORKING_DIRECTORY }}
          test-command: 'mvn -B -U clean compile test'

  # Deploy Test
  deploy-test-carpooling:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: test
    concurrency: deploy-test-carpooling
    env:
      KEYCLOAK_URL: https://auth.opendatahub.testingmachine.eu
    steps:
      - name: Checkout source code
        uses: noi-techpark/github-actions/checkout@v2
      - name: Create .env file
        uses: noi-techpark/github-actions/env-file@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
        env:
          # General deployment options
          X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
          X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
          X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
          X_JAVA_OPTIONS: -Xms128m -Xmx512m

          # Open Data Hub Writer Connectivity
          X_OAUTH_AUTH_URI: ${{ env.KEYCLOAK_URL }}/auth
          X_OAUTH_TOKEN_URI: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
          X_OAUTH_BASE_URI: https://mobility.share.opendatahub.testingmachine.eu/json
          X_OAUTH_CLIENT_ID: odh-mobility-datacollector
          X_OAUTH_CLIENT_NAME: odh-mobility-datacollector
          X_OAUTH_CLIENT_SECRET: ${{ secrets.DATACOLLECTORS_CLIENT_SECRET_TEST }}

          X_ODH_CLIENT_PROVENANCE_NAME: ${{ env.PROJECT_NAME }}
          X_ODH_CLIENT_PROVENANCE_VERSION: ${{ github.sha }}

          # Logging
          X_LOG_LEVEL: "info"
          X_LOG_STYLE: json

          X_GOOGLE_API_APPLICATION_NAME: rides_italy.csv
          X_GOOGLE_API_DRIVE_FILE_ID: 1HzmEq-XB4dJEFlb0MAeupS3LRUXf86eI
          X_GOOGLE_API_CREDENTIALS_FILE: /google-api-service-account.json

          X_SCHEDULER_CRON_CAR_POOLING: 0 */10 * * * *

      - name: Create google service account json
        run: echo -ne $GOOGLE_API_SERVICE_ACCOUNT > $WORKING_DIRECTORY/src/main/resources/google-api-service-account.json

      - name: Build project
        uses: noi-techpark/github-actions/maven-build@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}
          java-version: ${{ env.JAVA_VERSION }}
          build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'

      - name: Build and push images
        uses: noi-techpark/github-actions/docker-build-and-push@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
          docker-username: ${{ github.actor }}
          docker-password: ${{ secrets.GITHUB_TOKEN }}


      - name: Deploy application
        uses: noi-techpark/github-actions/docker-deploy@v2
        with:
          working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
          hosts: 'test'
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          docker-username: 'noi-techpark-bot'
          docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          project-name: ${{ env.PROJECT_NAME }}


  # Deploy Production
  # deploy-prod-carpooling:
  #   runs-on: ubuntu-20.04
  #   if: github.ref == 'refs/heads/prod'
  #   needs: test
  #   concurrency: deploy-prod-carpooling
  #   env:
  #     KEYCLOAK_URL: https://auth.opendatahub.bz.it
  #   steps:
  #     - name: Checkout source code
  #       uses: noi-techpark/github-actions/checkout@v2
  #     - name: Create .env file
  #       uses: noi-techpark/github-actions/env-file@v2
  #       with:
  #         working-directory: ${{ env.WORKING_DIRECTORY }}
  #       env:
  #         # General deployment options
  #         X_COMPOSE_PROJECT_NAME: ${{ env.PROJECT_NAME }}
  #         X_DOCKER_IMAGE: ${{ env.DOCKER_IMAGE }}
  #         X_DOCKER_TAG: ${{ env.DOCKER_TAG }}
  #         X_JAVA_OPTIONS: -Xms128m -Xmx512m

  #         # Open Data Hub Writer Connectivity
  #         X_OAUTH_AUTH_URI: ${{ env.KEYCLOAK_URL }}/auth
  #         X_OAUTH_TOKEN_URI: ${{ env.KEYCLOAK_URL }}/auth/realms/noi/protocol/openid-connect/token
  #         X_OAUTH_BASE_URI: https://mobility.share.opendatahub.bz.it/json
  #         X_OAUTH_CLIENT_ID: odh-mobility-datacollector
  #         X_OAUTH_CLIENT_NAME: odh-mobility-datacollector
  #         X_OAUTH_CLIENT_SECRET: ${{ secrets.DATACOLLECTORS_CLIENT_SECRET_PROD }}

  #         X_ODH_CLIENT_PROVENANCE_NAME: ${{ env.PROJECT_NAME }}
  #         X_ODH_CLIENT_PROVENANCE_VERSION: ${{ github.sha }}

  #         # Logging
  #         X_LOG_LEVEL: "info"
  #         X_LOG_STYLE: json

  #         X_GOOGLE_API_APPLICATION_NAME: rides_italy.csv
  #         X_GOOGLE_API_DRIVE_FILE_ID: 1HzmEq-XB4dJEFlb0MAeupS3LRUXf86eI
  #         X_GOOGLE_API_CREDENTIALS_FILE: /google-api-service-account.json

  #         X_SCHEDULER_CRON_CAR_POOLING: 0 */10 * * * *

  #     - name: Create google service account json
  #       run: echo -ne $GOOGLE_API_SERVICE_ACCOUNT > $WORKING_DIRECTORY/src/main/resources/google-api-service-account.json

  #     - name: Build project
  #       uses: noi-techpark/github-actions/maven-build@v2
  #       with:
  #         working-directory: ${{ env.WORKING_DIRECTORY }}
  #         java-version: ${{ env.JAVA_VERSION }}
  #         build-command: 'mvn -B -DskipTests -DfinalName=ROOT clean package'

  #     - name: Build and push images
  #       uses: noi-techpark/github-actions/docker-build-and-push@v2
  #       with:
  #         working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure
  #         docker-username: ${{ github.actor }}
  #         docker-password: ${{ secrets.GITHUB_TOKEN }}


  #     - name: Deploy application
  #       uses: noi-techpark/github-actions/docker-deploy@v2
  #       with:
  #         working-directory: ${{ env.WORKING_DIRECTORY }}/infrastructure/ansible
  #         hosts: 'prod'
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         docker-username: 'noi-techpark-bot'
  #         docker-password: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  #         project-name: ${{ env.PROJECT_NAME }}

